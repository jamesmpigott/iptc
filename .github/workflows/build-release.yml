name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        brew install exempi expat
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create spec file
      run: |
        # First find the actual paths of our libraries
        EXEMPI_PATH=$(brew list exempi | grep 'libexempi.dylib')
        EXPAT_PATH=$(brew list expat | grep 'libexpat.dylib')
        echo "Exempi path: $EXEMPI_PATH"
        echo "Expat path: $EXPAT_PATH"

        # Create spec using the found paths
        pyi-makespec --windowed \
          --add-binary "$EXEMPI_PATH:." \
          --add-binary "$EXPAT_PATH:." \
          --add-data 'assets/*:assets' \
          --icon 'assets/favicon.ico' \
          --name 'MSUK-Description-Fixer' \
          gui.py

    - name: Build app
      run: pyinstaller MSUK-Description-Fixer.spec
    
    - name: Sign application
      run: |
        # Remove any existing signatures first
        codesign --remove-signature "dist/MSUK-Description-Fixer.app" || true
        
        # Sign all dylibs inside the app bundle
        find "dist/MSUK-Description-Fixer.app" -name "*.dylib" -exec codesign --force --deep --sign - {} \;
        
        # Sign the main app bundle
        codesign --force --deep --sign - --timestamp --options runtime "dist/MSUK-Description-Fixer.app"
        
        # Remove quarantine attributes
        xattr -cr "dist/MSUK-Description-Fixer.app"
        
        # Verify the signature
        codesign --verify --verbose "dist/MSUK-Description-Fixer.app"

    - name: Create ZIP archive
      run: zip -r MSUK-Description-Fixer.zip dist
    
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./MSUK-Description-Fixer.zip
        asset_name: MSUK-Description-Fixer.zip
        asset_content_type: application/zip
